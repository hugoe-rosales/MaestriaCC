/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gradleproject1;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Default
 */
public class incicioSesion extends javax.swing.JFrame {
    String rutaArchivo = "C:\\ProyectoFinal";
    String archivoSalida = "C:\\ProyectoFinal\\Usuarios.txt";
    DefaultListModel dfListModel;
    ArrayList<Usuario> listaUsuarios = new ArrayList<Usuario>();
    /**
     * Creates new form incicioSesion
     */
    public incicioSesion() {
        initComponents();
        inicializar();
    }

    private void inicializar(){
        //txtContraseña.sete
        File directorio = new File(rutaArchivo);
        if (!directorio.exists()) 
            if (directorio.mkdirs()) 
                System.out.println("Directorio creado");
            else 
                System.out.println("Error al crear directorio");
        cargarDatosUsuariosTxt();
    }
    
    private boolean guardarUsuario(){
        try{
            String usuario = txtUsuario.getText().trim().toUpperCase();
            String contraseña = txtContraseña.getText().trim();
            Usuario usr = new Usuario();
            usr.setUsuario(usuario); usr.setContraseña(contraseña);
            listaUsuarios.add(usr);

            FileWriter archSalida = new FileWriter(archivoSalida, true);
            BufferedWriter bufSalida = new BufferedWriter(archSalida);
            bufSalida.write("\n" + usuario + "," + contraseña);
            bufSalida.close(); archSalida.close();
            JOptionPane.showMessageDialog(null, "REGISTRO EXITOSO!");     
            lanzaFrameAgenda();
        } catch(IOException e) {
            e.printStackTrace();
            return false;
        }
        return true;
    }

    private void cargarDatosUsuariosTxt(){
        String linea = "";
        String dfModel = "";
        dfListModel = new DefaultListModel();

        try{
            FileReader archivoDatos = new FileReader(archivoSalida);
            BufferedReader buffer = new BufferedReader(archivoDatos);
            while ((linea = buffer.readLine()) != null) {
                String[] datosUsuario = linea.split(",");
                if (linea.trim().length() > 0 && datosUsuario.length > 0){
                    Usuario usr = new Usuario();
                    dfModel = datosUsuario[0] + "," + datosUsuario[1];
                    usr.setUsuario(datosUsuario[0]); usr.setContraseña(datosUsuario[1]);
                    listaUsuarios.add(usr);
                    dfListModel.addElement(dfModel);
                }
            }
            buffer.close();
            archivoDatos.close();
        } catch(IOException e){
            e.printStackTrace();
        }
    }

    private boolean validarControles(){
        if (txtUsuario.getText().trim().length() == 0){
            JOptionPane.showMessageDialog(null, "EL  [NOMBRE DE USUARIO]  NO DEBE ESTAR VACIO.");
            txtUsuario.requestFocusInWindow();
            return false;
        } else if (txtContraseña.getText().trim().length() == 0){
            JOptionPane.showMessageDialog(null, "LA  [CONTRASEÑA]  NO DEBE ESTAR EN BLANCO.");
            txtContraseña.requestFocusInWindow();
            return false;
        }
        return true;
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblUsuario = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        lblContraseña = new javax.swing.JLabel();
        txtContraseña = new javax.swing.JPasswordField();
        btnIrApp = new javax.swing.JButton();
        btnRegistrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("VALIDAR CREDENCIALES");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblUsuario.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblUsuario.setText("Usuario:");

        txtUsuario.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        lblContraseña.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblContraseña.setText("Contraseña:");

        txtContraseña.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtContraseña.setName("txtContraseña"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblContraseña)
                    .addComponent(lblUsuario))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                    .addComponent(txtContraseña))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsuario)
                    .addComponent(txtUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblContraseña)
                    .addComponent(txtContraseña, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        btnIrApp.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnIrApp.setText("Ir a la Agenda");
        btnIrApp.setActionCommand("");
        btnIrApp.setName("btnIrApp"); // NOI18N
        btnIrApp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIrAppActionPerformed(evt);
            }
        });

        btnRegistrar.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnRegistrar.setText("Registrar");
        btnRegistrar.setName("btnRegistrar"); // NOI18N
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnRegistrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnIrApp)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnIrApp)
                    .addComponent(btnRegistrar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIrAppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIrAppActionPerformed
        // TODO add your handling code here:
        String usuario = txtUsuario.getText().trim().toUpperCase();
        String contraseña = txtContraseña.getText().trim();
        boolean credencialesValidas = false;
        if (validarControles())
            if (listaUsuarios.size() > 0){
                for(Usuario usr: listaUsuarios){
                    if (usr.getUsuario().trim().toUpperCase().contentEquals(usuario) && usr.getContraseña().contentEquals(contraseña)){
                        credencialesValidas = true;
                        lanzaFrameAgenda();
                    }
                }
                if (credencialesValidas == false) { JOptionPane.showMessageDialog(null, "CREDENCIALES NO VÁLIDAS...\n\nINGRESE UN NOMBRE DE USUARIO Y CONTRASEÑA CORRECTOS!"); }
            } else 
                JOptionPane.showMessageDialog(null, "ACTUALMENTE NO HAY USUARIOS REGISTRADOS...\n\nREGISTRE UN NOMBRE DE USUARIO Y CONTRASEÑA PARA INGRESAR A LA AGENDA!");
    }//GEN-LAST:event_btnIrAppActionPerformed

    private void lanzaFrameAgenda(){
        JFrame frame = new Proyecto_Final();
        this.setVisible(false);
        frame.show();
    }
    
    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        // TODO add your handling code here:
        String usuario = txtUsuario.getText().trim().toUpperCase();
        String contraseña = txtContraseña.getText().trim();
        boolean usrRegistrado = false;
        if (usuario.length() > 0 && contraseña.length() > 0)
            for(Usuario usr: listaUsuarios)
                if (usr.getUsuario().contentEquals(usuario))
                    usrRegistrado = true;
            
            if (usrRegistrado == false){
                if (guardarUsuario())
                    lanzaFrameAgenda();
                else 
                    JOptionPane.showMessageDialog(null, "INGRESE LOS DATOS DE USUARIO Y CONTRASEÑA!");
            } else 
                JOptionPane.showMessageDialog(null, "EL NOMBRE DE USUARIO YA HA SIDO REGISTRADO!");
    }//GEN-LAST:event_btnRegistrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(incicioSesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(incicioSesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(incicioSesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(incicioSesion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new incicioSesion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIrApp;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblContraseña;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JPasswordField txtContraseña;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables
}

class Usuario {
    public String usuario, contraseña;

    public Usuario() {
    }

    public String getUsuario() {
        return usuario;
    }
    public void setUsuario(String usuario) {
        this.usuario = usuario;
    }

    public String getContraseña() {
        return contraseña;
    }
    
    public void setContraseña(String contraseña){
        this.contraseña = contraseña;
    }
}